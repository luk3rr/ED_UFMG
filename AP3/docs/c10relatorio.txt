Esse código é perigoso e se vocẽ vacilar ele agacha seu computador (como diz o Wagner).
Pra ter a saída do valgrind eu precisei limitar o número de vezes que o while vai rodar para 100,
e o resultado foi o que segue:

==2114604== Memcheck, a memory error detector
==2114604== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2114604== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==2114604== Command: ./a.out
==2114604==
==2114604==
==2114604== HEAP SUMMARY:
==2114604==     in use at exit: 12,928 bytes in 101 blocks
==2114604==   total heap usage: 102 allocs, 1 frees, 17,024 bytes allocated
==2114604==
==2114604== 12,928 bytes in 101 blocks are definitely lost in loss record 1 of 1
==2114604==    at 0x4841888: malloc (vg_replace_malloc.c:393)
==2114604==    by 0x109161: main (c10.c:9)
==2114604==
==2114604== LEAK SUMMARY:
==2114604==    definitely lost: 12,928 bytes in 101 blocks
==2114604==    indirectly lost: 0 bytes in 0 blocks
==2114604==      possibly lost: 0 bytes in 0 blocks
==2114604==    still reachable: 0 bytes in 0 blocks
==2114604==         suppressed: 0 bytes in 0 blocks
==2114604==
==2114604== For lists of detected and suppressed errors, rerun with: -s
==2114604== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Esse código fica alocando espaço da memória como se não houvesse amanhã.
Não tem muito sentido de ficar alocando isso, mas pra não agachar o PC, tu poderia ir desalocando
a médida que aloca e printa.

Além disso, para que o loop tenha um fim e eu consiga ter a saída do valgrind, limitei o número de vezes que ele roda em um milhão. A saída, portanto, foi a seguinte:

==2139090== Memcheck, a memory error detector
==2139090== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2139090== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==2139090== Command: ./a.out
==2139090==
==2139090==
==2139090== HEAP SUMMARY:
==2139090==     in use at exit: 0 bytes in 0 blocks
==2139090==   total heap usage: 1,000,002 allocs, 1,000,002 frees, 128,004,224 bytes allocated
==2139090==
==2139090== All heap blocks were freed -- no leaks are possible
==2139090==
==2139090== For lists of detected and suppressed errors, rerun with: -s
==2139090== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
