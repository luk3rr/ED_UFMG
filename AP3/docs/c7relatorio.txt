Saída do valgrind:

==1942350== Memcheck, a memory error detector
==1942350== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1942350== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==1942350== Command: ./a.out
==1942350==
==1942350== Invalid write of size 1
==1942350==    at 0x109198: main (c7.c:10)
==1942350==  Address 0x4a6705a is 0 bytes after a block of size 26 alloc'd
==1942350==    at 0x4846A73: calloc (vg_replace_malloc.c:1340)
==1942350==    by 0x10915F: main (c7.c:5)
==1942350==
==1942350==
==1942350== HEAP SUMMARY:
==1942350==     in use at exit: 0 bytes in 0 blocks
==1942350==   total heap usage: 1 allocs, 1 frees, 26 bytes allocated
==1942350==
==1942350== All heap blocks were freed -- no leaks are possible
==1942350==
==1942350== For lists of detected and suppressed errors, rerun with: -s
==1942350== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Essa escrita inválida era ocasionada pela tentativa de atribuir o caractere nulo à posição
posterior à última letra do alfabeto. Entretanto, o array de char foi alocado apenas com 26 bytes
(1 para cada letra do alfabeto) e não havia mais espaço para o caractere nulo, pois ele também
ocupa 1 byte de memória.

A solução foi aumentar o tamanho alocado para o array char de 26 para 27 bytes.
A saída do valgrind após essa alteração foi:

==1995359== Memcheck, a memory error detector
==1995359== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1995359== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==1995359== Command: ./a.out
==1995359==
==1995359==
==1995359== HEAP SUMMARY:
==1995359==     in use at exit: 0 bytes in 0 blocks
==1995359==   total heap usage: 1 allocs, 1 frees, 27 bytes allocated
==1995359==
==1995359== All heap blocks were freed -- no leaks are possible
==1995359==
==1995359== For lists of detected and suppressed errors, rerun with: -s
==1995359== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
