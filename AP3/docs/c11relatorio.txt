Ao tentar compilar o código, recebemos o seguinte warning

c11.c: In function ‘main’:
c11.c:8:3: warning: ‘__builtin_memcpy’ writing 10 bytes into a region of size 8 overflows the destination [-Wstringop-overflow=]
    8 |   strcpy(msg, "Holberton");
      |   ^~~~~~~~~~~~~~~~~~~~~~~~
c11.c:7:15: note: destination object of size 8 allocated by ‘malloc’
    7 |   char *msg = malloc(8);
      |               ^~~~~~~~~

O relatório do valgrind foi o seguinte:

==2180393== Memcheck, a memory error detector
==2180393== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2180393== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==2180393== Command: ./a.out
==2180393==
==2180393== Invalid write of size 2
==2180393==    at 0x109180: main (c11.c:8)
==2180393==  Address 0x4a67048 is 0 bytes after a block of size 8 alloc'd
==2180393==    at 0x4841888: malloc (vg_replace_malloc.c:393)
==2180393==    by 0x10916A: main (c11.c:7)
==2180393==
==2180393== Invalid read of size 1
==2180393==    at 0x4847D14: strlen (vg_replace_strmem.c:499)
==2180393==    by 0x48D6BA0: __printf_buffer (vfprintf-process-arg.c:423)
==2180393==    by 0x48D72A1: __vfprintf_internal (vfprintf-internal.c:1459)
==2180393==    by 0x48CCEAE: printf (printf.c:33)
==2180393==    by 0x1091AE: main (c11.c:10)
==2180393==  Address 0x4a67048 is 0 bytes after a block of size 8 alloc'd
==2180393==    at 0x4841888: malloc (vg_replace_malloc.c:393)
==2180393==    by 0x10916A: main (c11.c:7)
==2180393==
==2180393== Invalid read of size 1
==2180393==    at 0x484BB5D: memmove (vg_replace_strmem.c:1398)
==2180393==    by 0x48CD828: __printf_buffer_write (Xprintf_buffer_write.c:39)
==2180393==    by 0x48D575C: __printf_buffer (vfprintf-process-arg.c:489)
==2180393==    by 0x48D72A1: __vfprintf_internal (vfprintf-internal.c:1459)
==2180393==    by 0x48CCEAE: printf (printf.c:33)
==2180393==    by 0x1091AE: main (c11.c:10)
==2180393==  Address 0x4a67048 is 0 bytes after a block of size 8 alloc'd
==2180393==    at 0x4841888: malloc (vg_replace_malloc.c:393)
==2180393==    by 0x10916A: main (c11.c:7)
==2180393==
2180393, Rolberton
==2180393==
==2180393== HEAP SUMMARY:
==2180393==     in use at exit: 8 bytes in 1 blocks
==2180393==   total heap usage: 2 allocs, 1 frees, 1,032 bytes allocated
==2180393==
==2180393== 8 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2180393==    at 0x4841888: malloc (vg_replace_malloc.c:393)
==2180393==    by 0x10916A: main (c11.c:7)
==2180393==
==2180393== LEAK SUMMARY:
==2180393==    definitely lost: 8 bytes in 1 blocks
==2180393==    indirectly lost: 0 bytes in 0 blocks
==2180393==      possibly lost: 0 bytes in 0 blocks
==2180393==    still reachable: 0 bytes in 0 blocks
==2180393==         suppressed: 0 bytes in 0 blocks
==2180393==
==2180393== For lists of detected and suppressed errors, rerun with: -s
==2180393== ERROR SUMMARY: 6 errors from 4 contexts (suppressed: 0 from 0)

Observações:
1. Falta o free do array 'msg';
2. O warning ocorre pois o strcpy copia, além da string, o caractere nulo para o final do array.
Como a string "Helberton' tem 9 caracteres, precisamos alocar um array de 10 bytes para alocar a
string + o caractere nulo.

Ao fazer as mudanças necessárias, durante a compilação não houve nenhum warning e o relatório do
valgrind foi o seguinte:

==2217282== Memcheck, a memory error detector
==2217282== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2217282== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==2217282== Command: ./a.out
==2217282==
2217282, Rolberton
==2217282==
==2217282== HEAP SUMMARY:
==2217282==     in use at exit: 0 bytes in 0 blocks
==2217282==   total heap usage: 2 allocs, 2 frees, 1,034 bytes allocated
==2217282==
==2217282== All heap blocks were freed -- no leaks are possible
==2217282==
==2217282== For lists of detected and suppressed errors, rerun with: -s
==2217282== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
