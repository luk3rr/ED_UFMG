Ao utilizar o valgrind, recebemos o seguinte erro:

==1388907== Memcheck, a memory error detector
==1388907== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1388907== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==1388907== Command: ./a.out
==1388907==
==1388907== Conditional jump or move depends on uninitialised value(s)
==1388907==    at 0x48D69A8: __printf_buffer (vfprintf-process-arg.c:58)
==1388907==    by 0x48D72A1: __vfprintf_internal (vfprintf-internal.c:1459)
==1388907==    by 0x48CCEAE: printf (printf.c:33)
==1388907==    by 0x1091BD: main (c2.c:11)
==1388907==
==1388907== Use of uninitialised value of size 8
==1388907==    at 0x48CC12B: _itoa_word (_itoa.c:177)
==1388907==    by 0x48D5ABD: __printf_buffer (vfprintf-process-arg.c:155)
==1388907==    by 0x48D72A1: __vfprintf_internal (vfprintf-internal.c:1459)
==1388907==    by 0x48CCEAE: printf (printf.c:33)
==1388907==    by 0x1091BD: main (c2.c:11)
==1388907==
==1388907== Conditional jump or move depends on uninitialised value(s)
==1388907==    at 0x48CC13C: _itoa_word (_itoa.c:177)
==1388907==    by 0x48D5ABD: __printf_buffer (vfprintf-process-arg.c:155)
==1388907==    by 0x48D72A1: __vfprintf_internal (vfprintf-internal.c:1459)
==1388907==    by 0x48CCEAE: printf (printf.c:33)
==1388907==    by 0x1091BD: main (c2.c:11)
==1388907==
==1388907== Conditional jump or move depends on uninitialised value(s)
==1388907==    at 0x48D5B09: __printf_buffer (vfprintf-process-arg.c:186)
==1388907==    by 0x48D72A1: __vfprintf_internal (vfprintf-internal.c:1459)
==1388907==    by 0x48CCEAE: printf (printf.c:33)
==1388907==    by 0x1091BD: main (c2.c:11)
==1388907==
0 1 2 3 4 5 6 7 8 0
==1388907==
==1388907== HEAP SUMMARY:
==1388907==     in use at exit: 0 bytes in 0 blocks
==1388907==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==1388907==
==1388907== All heap blocks were freed -- no leaks are possible
==1388907==
==1388907== Use --track-origins=yes to see where uninitialised values come from
==1388907== For lists of detected and suppressed errors, rerun with: -s
==1388907== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)

O erro se da pelo fato de que, por mais que o vetor 'a' tenha sido alocado com espaço suficiente
para gravar os 9 inteiros (primeiro loop), no segundo loop havia a tentativa de printar o valor
da 10a posição, o qual não foi atribuido.

Após modificar o segundo loop para iterar até o valor 'n', tal que n = i, ou seja, até onde o primeiro loop iterou, a saída do valgrind foi a seguinte:

==1422830== Memcheck, a memory error detector
==1422830== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==1422830== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==1422830== Command: ./a.out
==1422830==
0 1 2 3 4 5 6 7 8
==1422830==
==1422830== HEAP SUMMARY:
==1422830==     in use at exit: 0 bytes in 0 blocks
==1422830==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==1422830==
==1422830== All heap blocks were freed -- no leaks are possible
==1422830==
==1422830== For lists of detected and suppressed errors, rerun with: -s
==1422830== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
